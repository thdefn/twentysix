version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      TZ: Asia/Seoul
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    networks:
      - app-network

  mongodb1:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data1:/data/db
      - ./init-mongo-replica.js:/docker-entrypoint-initdb.d/init-mongo-replica.js
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
    depends_on:
      - mongodb2
      - mongodb3
    networks:
      - ts-network

  mongodb2:
    image: mongo:5.0
    container_name: mongodb2
    ports:
      - "27018:27017"
    volumes:
      - mongo_data2:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_DATABASE: mydatabase
    networks:
      - app-network
  mongodb3:
    image: mongo:5.0
    container_name: mongodb2
    ports:
      - "27019:27017"
    volumes:
      - mongo_data3:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_DATABASE: mydatabase
    networks:
      - ts-network

  zookeeper:
    image: wurstmeister/zookeeper:3.7.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      JAVA_OPTS: "-Xms256m -Xmx256m"
    networks:
      - ts-network

  kafka:
    image: wurstmeister/kafka:2.13-3.4.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms512m"
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - ts-network

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command:
    - redis-server --appendonly yes --bind 0.0.0.0 --protected-mode yes --requirepass 1234 --maxmemory-policy allkeys-lru
    networks:
      - ts-network

volumes:
  mysql_data:
  mongo_data1:
  mongo_data2:
  mongo_data3:
  kafka_data:
  redis_data:

networks:
  ts-network:
    driver: bridge

