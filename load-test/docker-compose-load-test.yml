version: '3.8'

services:
  brand-service:
    build:
      context: ../
      dockerfile: ./brand/Dockerfile-test
    ports:
      - "8082:8082"
    environment:
      DB_URL: ${BRAND_DB_URL}
      DB_PASSWORD: ${DB_PASSWORD}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
    networks:
      - ts-network

  user-service:
    build:
      context: ../
      dockerfile: ./user/Dockerfile-test
    ports:
      - "8081:8081"
    environment:
      DB_URL: ${USER_DB_URL}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      MAILGUN_URL: ${MAILGUN_URL}
      MAILGUN_KEY: ${MAILGUN_KEY}
      KAFKA_BROKERS: ${KAFKA_BROKERS}
    networks:
      - ts-network

  product-service:
    build:
      context: ../
      dockerfile: ./product/Dockerfile-test
    ports:
      - "8083:8083"
    environment:
      DB_URL: ${PRODUCT_DB_URL}
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
    networks:
      - ts-network

  payment-service:
    build:
      context: ../
      dockerfile: ./payment/Dockerfile-test
    ports:
      - "8085:8085"
    environment:
      DB_URL: ${PAYMENT_DB_URL}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      TOSS_PAYMENT_SECRET: ${TOSS_PAYMENT_SECRET}
    networks:
      - ts-network

  order-service:
    build:
      context: ../
      dockerfile: ./order/Dockerfile-test
    ports:
      - "8084:8084"
    environment:
      DB_URL: ${ORDER_DB_URL}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
    networks:
      - ts-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - ts-network


  kafka-exporter:
    image: danielqsj/kafka-exporter
    container_name: kafka-exporter
    command: ["--kafka.server=${KAFKA_BROKERS}"]
    ports:
      - "9308:9308"
    networks:
      - ts-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - kafka-exporter
      - node-exporter
    networks:
      - ts-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - ts-network

networks:
  ts-network:
    driver: bridge

