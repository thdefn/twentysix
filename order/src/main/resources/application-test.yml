spring:
  datasource:
    url: j${DB_URL}
    username: root
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  cloud:
    function:
      definition: product-order-failed;payment-finalized
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_BROKERS}
      bindings:
        order-out-0:
          destination: order-events
          content-type: application/json
        product-order-failed-in-0:
          destination: product-order-failed-events
          group: order-group
          content-type: application/json
        address-out-0:
          destination: address-events
          content-type: application/json
        payment-finalized-in-0:
          destination: payment-finalized-events
          group: order-group
          content-type: application/json
        order-failed-out-0:
          destination: order-failed-events
          content-type: application/json
        order-cancelled-out-0:
          destination: order-cancelled-events
          content-type: application/json
  data:
    redis:
      password: ${REDIS_PASSWORD}
      timeout: 600ms
      host: ${REDIS_HOST}
server:
  port: 8084

grpc:
  server:
    port: 9005
  client:
    brand:
      host: brand-service
      port: 9002
    product:
      host: product-service
      port: 9001

logging:
  level:
    org.springframework.cloud.stream: DEBUG